<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>代码块演示</title>
      <link href="/2022/06/09/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/"/>
      <url>/2022/06/09/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public class Myblog&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git学习</title>
      <link href="/2022/06/09/git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/06/09/git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="Git-学习"><a href="#Git-学习" class="headerlink" title="Git 学习"></a>Git 学习</h2><p>Git是目前世界上最先进的分布式版本控制系统</p><p>工作流程：</p><p><img src="C:\Users\Lenovo\AppData\Roaming\Typora\typora-user-images\image-20220425082207071.png" alt="image-20220425082207071"></p><p>workspace有修改后，先add到缓存区，再commit提交到分支上</p><p>本地生成ssh公私钥</p><p><code>ssh-keygen -t rsa -C “email”</code></p><p>常用git命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">大部分命令同linux</span><br><span class="line">//修改全局配置</span><br><span class="line">git config --global xxxx</span><br><span class="line">git config --global -l //显示内容</span><br><span class="line">//在本地文件夹上创建仓库/初始化仓库</span><br><span class="line">//进入待提交文件夹中</span><br><span class="line">git init //把这个目录初始化为git可以管理的仓库，文件夹下多.git目录</span><br><span class="line"></span><br><span class="line">//添加到缓冲区</span><br><span class="line">git add 文件名</span><br><span class="line">//提交到本地仓库</span><br><span class="line">git commit -m &#x27;备注信息&#x27;</span><br><span class="line">//查看当前状态</span><br><span class="line">git status</span><br><span class="line">//查看文件修改了哪些内容</span><br><span class="line">git diff 文件名</span><br><span class="line">//查看历史记录</span><br><span class="line">git log</span><br><span class="line">git log --pretty=oneline</span><br><span class="line">//回退版本</span><br><span class="line">git reset --hard HEAD^   //^^表示回退两个版本 回退多个版本用HEAD~X </span><br><span class="line">git reset --hard 版本号</span><br><span class="line">//查版本号</span><br><span class="line">git reflog</span><br><span class="line">//放弃此次修改</span><br><span class="line">git checkout -- filename //回到上一次缓存区的状态</span><br><span class="line">//已经add过的内容需要删除修改就只有回退版本</span><br><span class="line">//删除</span><br><span class="line">rm 文件名</span><br><span class="line">再commit</span><br><span class="line">如果想恢复：git checkout -- b.txt </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//远程仓库</span><br><span class="line"></span><br><span class="line">git remote add origin git地址</span><br><span class="line">git push -u origin master</span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line">git remote //查看远程库信息</span><br><span class="line">git remote -v //查看远程库详细信息</span><br><span class="line">//-u Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</span><br><span class="line"></span><br><span class="line">//克隆本地库</span><br><span class="line">git clone 待克隆地址</span><br><span class="line"></span><br><span class="line">//克隆远程库的一个分支</span><br><span class="line">git fetch &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"></span><br><span class="line">//创建并切换新分支</span><br><span class="line">git checkout -b 分支名 //-b表示创建并切换 相当于：git branch dev//创建分支 </span><br><span class="line">// git checkout dev//切换到dev分支</span><br><span class="line">//查看当前分支</span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line">// 合并分支</span><br><span class="line">git merge 分支名  //将指定分支合并在所在分支上 </span><br><span class="line">//状态： Fast-forward 快进模式，直接把master指向dev的当前提交，合并速度很快</span><br><span class="line"></span><br><span class="line">//删除分支</span><br><span class="line">git branch -d 分支名</span><br></pre></td></tr></table></figure><p>多人协作一般流程：</p><p>因此：多人协作工作模式一般是这样的：</p><p>首先，可以试图用git push origin branch-name推送自己的修改.<br>如果推送失败，则因为远程分支比你的本地更新早，需要先用git pull试图合并。<br>如果合并有冲突，则需要解决冲突，并在本地提交。再用git push origin branch-name推送。</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>环境：nodejs、npm、git</p><p>GitHub上创建仓库，本地生成ssh公私钥，公钥添加到GitHub账户中</p><p>测试连接：ssh -T <a href="mailto:&#x67;&#105;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#x6d;">&#x67;&#105;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#111;&#x6d;</a></p><p>找到任意本地文件夹开始项目</p><p>hexo init 初始化</p><p>hexo s  开始</p><p>修改配置文件：_config.yml</p><p><a href="https://hexo.io/zh-cn/docs/configuration.html">https://hexo.io/zh-cn/docs/configuration.html</a> 参考文档</p><p><a href="https://hexo.io/zh-cn/docs/one-command-deployment">https://hexo.io/zh-cn/docs/one-command-deployment</a> &#x2F;&#x2F;部署到github的文档</p><p>下载 npm install hexo-deployer-git –save  &#x2F;&#x2F;为了能直接hexo d 部署到git仓库中</p><p>hexo g  &#x2F;&#x2F;生成静态页面</p><p>hexo d &#x2F;&#x2F;传到github上</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/06/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/06/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="测试内容"><a href="#测试内容" class="headerlink" title="测试内容"></a>测试内容</h2><p>zhes </p>]]></content>
      
      
      
        <tags>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/08/hello-world/"/>
      <url>/2022/06/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
